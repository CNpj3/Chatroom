/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server;
import java.io.*;
import java.net.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author user
 */
public class ServerUI extends javax.swing.JFrame {

    /**
     * Creates new form ServerUI
     */
    Map<String,String> user_pass = new HashMap<String,String>();
    PrintWriter user_pass_edit;
    public ServerUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        screen = new javax.swing.JTextArea();
        server_start_button = new javax.swing.JButton();
        port_num = new javax.swing.JTextField();
        port = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        screen.setColumns(20);
        screen.setRows(5);
        jScrollPane1.setViewportView(screen);

        server_start_button.setText("server start");
        server_start_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                server_start_buttonActionPerformed(evt);
            }
        });

        port_num.setText("2222");

        port.setText("port");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(port))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(port_num, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(128, 128, 128)
                        .addComponent(server_start_button, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(port_num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(port))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(server_start_button, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class Server implements Runnable{
        @Override
        public void run() {
            try {
                int num = Integer.parseInt(port_num.getText());
                ServerSocket ssock = new ServerSocket(num);
                screen.append("server now listen on port "+num+"\n");
                while(true){
                    Socket listen = ssock.accept();
                    //PrintWriter writer = new PrintWriter(listen.getOutputStream());
                    //todo: add writer to list
                    Thread listener = new Thread(new Handler(listen));
                    listener.start();
                }
            } catch (IOException ex) {
                Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
            }            
        }
    }
    
    public class Handler implements Runnable{
        Socket client;
        BufferedReader reader;
        PrintWriter writer;
        public Handler(Socket in) throws IOException{
            client = in;
            InputStreamReader isReader = new InputStreamReader(client.getInputStream());
            reader = new BufferedReader(isReader);
            writer = new PrintWriter(client.getOutputStream());
        }
        @Override
        public void run(){
            try {
                String[] data;
                String op;
                screen.append("one client connected\n");
                while((op = reader.readLine()) != null){
                    screen.append("recv op: "+op+"\n" );
                    if(op.equals("LOG")){
                        String user = reader.readLine();
                        String pass = reader.readLine();
                        
                        //if(user.equals("user") && pass.equals("pass")){
                        if(login_verify(user,pass)) writer.println("ok");                        
                        else writer.println("fail");
                        writer.flush();
                    }
                    else if (op.equals("REG")) {                        
                        String user = reader.readLine();
                        String pass = reader.readLine();
                        if(user_pass.containsKey(user)) writer.println("fail");
                        else{
                            user_pass.put(user,pass);
                            writer.println("ok");
                            //user_pass_edit.println("");
                            user_pass_edit.println(user+" "+pass);
                            user_pass_edit.flush();
                        }
                        writer.flush();
                    }
                }
            } catch (IOException ex) {
                screen.append("lost a connection\n");
                //Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        private boolean login_verify(String user, String pass){
            return (pass.equals(user_pass.get(user)));
        }
    }
   
    public void read_login_file() throws IOException{
        File yourFile = new File("login.txt");
        String[] parts;
        yourFile.createNewFile(); // if file already exists will do nothing 
        BufferedReader br = new BufferedReader(new FileReader(yourFile));
        for(String line; (line = br.readLine()) != null; ) {
            // process the line.
            parts = line.split(" ");
            user_pass.put(parts[0],parts[1]);
            screen.append("user:"+parts[0]+" pass:"+ user_pass.get(parts[0])+"\n");
        }
       
        user_pass_edit = new PrintWriter(new BufferedWriter(new FileWriter(yourFile,true)));
    // line is not visible here.
    }

    
    private void server_start_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_server_start_buttonActionPerformed
        try {
            read_login_file();
        } catch (IOException ex) {
            Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        Thread serv = new Thread(new Server());
        serv.start();
        server_start_button.setEnabled(false);
    }//GEN-LAST:event_server_start_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel port;
    private javax.swing.JTextField port_num;
    private javax.swing.JTextArea screen;
    private javax.swing.JButton server_start_button;
    // End of variables declaration//GEN-END:variables
}
